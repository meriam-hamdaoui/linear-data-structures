ALGORITHM overlapping_sum_hashTable
VAR
    set1: ARRAY_OF INTEGER[];
    set2: ARRAY_OF INTEGER[];
    sum, i, j, element : INTEGER := 0;
    hashTable : HASH_TABLE<INTEGER,INTEGER>;
    count : INTEGER := 1;
BEGIN
    FOR i FROM 0 TO set1.length-1 DO
        Read(set1[i]);
    END_FOR 
    FOR j FROM 0 TO set2.length-1 DO
        Read(set2[j]);
    END_FOR

    FOR i FROM 0 TO set1.length-1 DO
        IF (hashTable.lookup(set1[i]) = true) THEN
            hashTable.insert(set1[i], count+1);
        ELSE
            hashTable.insert(set1[i], count);
        END_IF
    END_FOR
    FOR j FROM 0 TO set2.length-1 DO
        IF (hashTable.lookup(set2[j]) = true) THEN
            hashTable.insert(set2[j], count+1);
        ELSE
            hashTable.insert(set2[j], count);
        END_IF
    END_FOR

    //calculate distinct element
    FOR element IN hashTable  DO
        if(hashTable.get(element) = 2){
            sum += element;
        }
    END_FOR
    sum = sum * 2;
    write("the sum of the overlapping elements is", sum); 
END